#!/usr/bin/env fish
# rename-gui - Rename a file via a GUI popup.
# Requirements: zenity

argparse -n rename-gui 'h/help' 'q/quiet' 'e/exact' -- $argv

if test -n "$_flag_h"
    echo "rename-gui - Rename a file via a GUI popup."
    echo "Usage: rename-gui [arguments]"
    echo
    echo "  -h/--help  - Print help and exit."
    echo "  -q/--quiet - Don't print any output."
    echo "  -e/--exact - Don't attempt to preserve the file extension."
    exit
end

function get_ext -d "Get the file extension of the input, or nothing if none found."
    string match -qr -- '^.+(?<ext>\\.[^.]+)$' "$argv[1]"
    echo "$ext"
end

set script (basename (status filename))
set input $argv[1]
set orig (basename $input)
set full_orig (realpath $input)
set pext (get_ext $input)
set dir (dirname $full_orig)

set preserve (if test -n "$_flag_e"; echo -n ""; else; echo -n " (preserving extension)"; end)

set new (zenity --entry --title="$script: $orig" --text="Rename '$orig'$preserve to:" --entry-text="$orig" --width=700)

if test $status -eq 0
    if test -z "$_flag_e"; and test -z (get_ext $new)
        set new "$new$pext"
    end
    if test -e "$dir/$new"
        set -l text "$script: Target name $dir/$new already exists; exiting..."
        zenity --error --text="$text"
        set_color red
        echo "$text"
        set_color normal
        exit 1
    end
    if not test "$full_orig" = "$dir/$new"
        mv "$full_orig" "$dir/$new"
    end
    if test -z "$_flag_q"
        set_color yellow
        echo -n "$script: "
        set_color normal
        echo -n "$full_orig"
        set_color yellow
        echo -n " -> "
        set_color normal
        echo "$dir/$new"
    end
else
    if test -z "$_flag_q"
        set_color yellow
        echo "$script: cancelled."
        set_color normal
    end
end

