#!/usr/bin/env fish

# vol - change alsa volume.
# more convenient and intuitive than typing crap like "amixer -c 2 set PCM +2%"

# usage:
# vol <operation> <parameter>
# or:
# vol <operation and parameter>

# operations are:
# + u up h higher - increase volume.
# - d down l lower - decrease volume.
# r reset s set - set volume to the specified value.
# t toggle - toggle muting.
# m mute - mute.
# un unmute - unmute.

# examples:
#
# show current volume:
# vol
#
# decrease volume by 2%:
# vol d
#
# increase volume by 5%:
# vol 5+
#
# increase volume by 3%:
# vol u 3
#
# toggle muting:
# vol t
#
# set volume to 40%:
# vol 40

# configuration:

# the name of the alsa device to affect
set device PCM

# the card number
set card 2

# code:

argparse -n vol 'h/help' -- $argv

if test -n "$_flag_h"
    echo "vol - change alsa volume."
    echo "Usage: vol [arguments] [operation] [parameter]"
    echo
    echo "  -h/--help - Print help and exit."
    echo "operations: + - reset toggle mute unmute"
    exit
end

if test 1 -eq (count $argv)
    set op (string replace -r -- '\d+' '' $argv[1])
    set param (string match -r -- '\d+' $argv[1])
    if test -z $param
        set param 2
    end
    if test -z $op
        set op s
    end
else if test 2 -eq (count $argv)
    set op $argv[1]
    set param $argv[2]
end

if test 0 -eq (count $argv)
    amixer -c $card get $device | tail -1 | string sub -s 16
else
    amixer -c $card set $device (switch $op
        case u up h higher +
            echo $param%+
        case d down l lower -
            echo $param%-
        case r reset set s
            echo $param%
        case t toggle
            echo toggle
        case m mute
            echo mute
        case un unmute
            echo unmute
        case '*'
            echo $op%
    end) | tail -1 | string sub -s 16
end
