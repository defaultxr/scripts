#!/usr/bin/env fish

# a2v - "audio to video". generate a video from a sound file and an image.
# useful for when you want to upload music to youtube or other video sharing sites.
# note: (for now) the image file can't be a gif.
# also note: if the image file size is big, generating the video will take longer.

# usage:
#
# a2v <IMAGE> <AUDIO> [OUTPUT]
# or:
# a2v <-i IMAGE> <-a AUDIO> [-o OUTPUT]

# examples:
#
# use cover.jpg as the image and happybirthday.mp3 as the audio file. the output file will be 'happybirthday.avi' in the current directory:
# a2v cover.jpg happybirthday.mp3
#
# use cover.jpg as the image, happybirthday.mp3 as the audio file, and dmca.ogv as the output filename:
# a2v cover.jpg happybirthday.mp3 dmca.ogv
#
# use blah.png as the image, foobar.mp3 as the audio, and nice.mp4 as the filename of the resulting video:
# a2v -i blah.png -a foobar.mp3 -o nice.mp4

# code:

if not command -qs ffmpeg
    echo "error: ffmpeg not found in path."
    exit 1
end

argparse -n a2v 'i/image=' 'a/audio=' 'o/output=' 'h/help' -- $argv

if test -n "$_flag_h"
    echo "a2v - convert an image and audio file to a video."
    echo "usage: a2v [-i] IMAGE [-a] AUDIO [[-o] OUTPUT]"
    echo
    echo "example: a2v -i foo.jpg -a bar.mp3 -o blah.avi"
    echo "example: a2v foo.jpg bar.mp3"
    echo "in the second example, the output filename is automatically set to \"bar.avi\"."
end

set image "$_flag_i"
set audio "$_flag_a"
set output "$_flag_o"

if test -z "$image"
    set image $argv[1]
    if test -z "$image"
        echo "error: a2v requires an image argument (first argument or -i)."
        exit 1
    end
    set argv $argv[2..]
end

if test -z "$audio"
    set audio $argv[1]
    if test -z "$audio"
        echo "error: a2v requires an audio argument (second argument or -a)."
        exit 1
    end
    set argv $argv[2..]
end

if test -z "$output"
    set output $argv[1]
    if test -z "$output"
        set output (string split -m 1 -r '.' "$audio")[1]".avi"
        echo "Assuming output filename '$output'."
    end
    set argv $argv[2..]
end

# echo image: $image
# echo audio: $audio
# echo output: $output

if test ! -f $image
    echo "Source image '$image' not found."
    exit 1
end

if test ! -f $audio
    echo "Source audio '$audio' not found."
    exit 1
end

# FIX: check if the image is a gif, and if so, create a temporary copy that is converted to png.

set length (ffprobe -i "$audio" -show_entries format=duration -loglevel quiet -of csv="p=0")

if test -f "$output"
    read -P "Output file '$output' already exists. Overwrite? (y/N) " answer
    if string match -i 'y*' "$answer"
        echo "Overwriting '$output'."
    else
        echo "Operation canceled."
        exit 1
    end
end

# -c:v libx264 -crf 20 -preset slow -vf format=yuv420p -c:a aac -movflags +faststart output.mp4

# ffmpeg -i "$audio" -loop 1 -i "$image" -r 1 -shortest -t $length "$output"
ffmpeg -i "$audio" -loop 1 -i "$image" -r 1 -shortest -t $length -c:v libx264 -crf 20 -preset slow -vf format=yuv420p -c:a aac -movflags +faststart "$output"
