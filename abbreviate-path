#!/usr/bin/env fish
# abbreviate-path - abbreviate the path passed as an argument.
# see also: fish's built-in prompt_pwd function, which does similar.

set -- script "$(path basename (status filename))"

argparse -n "$script" 'h/help' -- $argv

if set -q _flag_h
    echo "$script - abbreviate the path passed as an argument."
    echo "Usage: $script [arguments] PATH"
    echo
    echo "  -h/--help - Print help and exit."
    exit
end

if test -z "$HOME"
    echo $argv
else
    string replace -r "^$HOME" '~' $argv
end | string replace -r '^/home/(.+)$' '~$1' | string replace -r '^https?:/+(www.)youtube.com/watch' 'yt:'

true # "string replace" returns false if no replacement was done; we return true instead.
